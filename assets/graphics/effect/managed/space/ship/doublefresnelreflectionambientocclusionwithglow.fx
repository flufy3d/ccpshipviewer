<?xml version="1.0" ?>
<effect>
<shaders>
<shader name="main"><![CDATA[
precision highp float;uniform sampler2D DiffuseMap;uniform sampler2D GlowNormalSpecularMap;uniform sampler2D MaskMap;uniform samplerCube ReflectionMap;uniform samplerCube MaskReflectionMap;uniform sampler2D AmbientOcclusionMap;uniform vec4 MaterialSpecularCurve;uniform vec4 MaterialSpecularFactors;uniform vec4 GlowColor;uniform vec4 ReflectionFactors;uniform vec4 MaskDiffuseColor;uniform vec4 MaskSpecularCurve;uniform vec4 MaskSpecularFactors;uniform vec4 MaskReflectionFactors;uniform float MaskAmbientFactor;uniform float AODiffuseFactor;uniform vec3 u_sunDirection;uniform vec3 u_sunColor;uniform vec4 MaterialDiffuseColor;uniform float MaterialAmbientFactor;varying lowp vec2 v_TexCoord;varying lowp vec3 v_Normal;varying lowp vec3 v_Tangent;varying lowp vec3 v_Binormal;varying lowp vec3 v_EyeDirection;varying lowp vec2 v_TexCoord2;struct BaseLightingParams{float diffuse;float specularDot;float specularMaskedBrightness;vec3 reflectDir;vec3 normalWorld;};float x0(){return (texture2D(GlowNormalSpecularMap,v_TexCoord).b);}float x1(){return (texture2D(DiffuseMap,v_TexCoord).a);}BaseLightingParams x2(){BaseLightingParams x3;vec3 x4;((x4.xy)=(((texture2D(GlowNormalSpecularMap,v_TexCoord).ga)*2.0)-1.0));((x4.z)=sqrt((1.0-dot((x4.xy),(x4.xy)))));((x3.normalWorld)=normalize((((v_Tangent*(x4.x))+(v_Binormal*(x4.y)))+(v_Normal*(x4.z)))));((x3.diffuse)=clamp(dot((x3.normalWorld),u_sunDirection),0.0,1.0));vec3 x5=normalize(v_EyeDirection);vec3 x6=normalize((u_sunDirection+x5));((x3.specularDot)=clamp(dot((x3.normalWorld),x6),0.0,1.0));((x3.specularMaskedBrightness)=x0());((x3.reflectDir)=reflect((-x5),(x3.normalWorld)));return x3;}vec4 x7(BaseLightingParams x8,vec4 x9,vec4 x10,float x11,vec2 x12,vec3 x13){vec4 x14=(x9*x10);vec3 x15=((vec3(x11,x11,x11)*100.0)/255.0);float x16=(((x13.z)*pow((x8.specularDot),(x13.x)))+pow((x8.specularDot),(x13.y)));(x16*=(x8.specularMaskedBrightness));vec3 x17=(((x14.rgb)*((((x8.diffuse)+((x12.y)*x16))*u_sunColor)+x15))+(((x12.x)*x16)*u_sunColor));return vec4(x17,(x14.a));}vec4 x18(BaseLightingParams x19,vec4 x20,vec4 x21,float x22,vec2 x23,vec3 x24){float x25=(texture2D(AmbientOcclusionMap,v_TexCoord2).r);vec3 x26=(x25*vec3(x22,x22,x22));float x27=(1.0-(AODiffuseFactor*(1.0-x25)));vec4 x28=(x20*x21);float x29=(((x24.z)*pow((x19.specularDot),(x24.x)))+pow((x19.specularDot),(x24.y)));(x29*=(x19.specularMaskedBrightness));vec3 x30=(((x28.rgb)*(((((x19.diffuse)+((x23.y)*x29))*u_sunColor)*x27)+x26))+(((x23.x)*x29)*u_sunColor));return vec4(x30,(x28.a));}vec3 x31(vec3 x32,vec3 x33,vec4 x34,samplerCube x35){vec3 x36=(textureCube(x35,x33).xyz);float x37=x0();float x38=clamp((((x34.w)*x37)+(x34.z)),0.0,1.0);vec3 x39=(x36*x38);return (x39*((x34.x)+((x34.y)*x32)));}void main(void ){BaseLightingParams x40=x2();vec4 x41=texture2D(DiffuseMap,v_TexCoord);vec4 x42=x18(x40,x41,MaterialDiffuseColor,MaterialAmbientFactor,(MaterialSpecularFactors.xy),(MaterialSpecularCurve.xyz));((x42.xyz)+=x31((x42.xyz),(x40.reflectDir),ReflectionFactors,ReflectionMap));vec4 x43=texture2D(MaskMap,v_TexCoord);float x44=(x43.a);if((x44!=0.0)){vec4 x45=x7(x40,x41,MaskDiffuseColor,MaskAmbientFactor,(MaskSpecularFactors.xy),(MaskSpecularCurve.xyz));((x45.rgb)+=x31((x45.rgb),(x40.reflectDir),MaskReflectionFactors,MaskReflectionMap));((x42.rgb)=(((x42.rgb)*(1.0-x44))+((x45.rgb)*x44)));}float x46=x1();((x42.rgb)+=((GlowColor.rgb)*vec3(x46,x46,x46)));((x42.a)=1.0);(gl_FragColor=x42);}
]]></shader>
<shader name="DoubleVS"><![CDATA[
precision highp float;uniform mat4 u_World;uniform mat4 u_ViewProjection;uniform vec3 u_EyePosition;attribute vec3 a_Position;attribute vec3 a_Normal;attribute vec3 a_Tangent;attribute vec3 a_Binormal;attribute vec2 a_TexCoord;attribute vec2 a_TexCoord1;varying lowp vec2 v_TexCoord;varying lowp vec3 v_Normal;varying lowp vec3 v_Tangent;varying lowp vec3 v_Binormal;varying lowp vec3 v_EyeDirection;varying lowp vec2 v_TexCoord2;void main(void ){(gl_Position=((u_ViewProjection*u_World)*vec4(a_Position,1.0)));(v_TexCoord=a_TexCoord);vec4 x0=(u_World*vec4(a_Position,1.0));(v_Normal=((u_World*vec4(a_Normal,0.0)).xyz));(v_Tangent=((u_World*vec4(a_Tangent,0.0)).xyz));(v_Binormal=((u_World*vec4(a_Binormal,0.0)).xyz));(v_EyeDirection=(u_EyePosition-(x0.xyz)));(v_TexCoord2=a_TexCoord1);}struct BaseLightingParams{float diffuse;float specularDot;float specularMaskedBrightness;vec3 reflectDir;vec3 normalWorld;};
]]></shader>
</shaders>
<techniques>
<technique name="default">
<pass name="p0" vertexShader="DoubleVS" fragmentShader="main">
</pass>
</technique>
</techniques>
</effect>
